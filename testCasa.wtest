import cosas.*
import casa.*

describe "Sobre las cosas que se compran" {
  test "Gasto 29200 en total" {
    casaDePepeYJulian.comprar(heladera)
    casaDePepeYJulian.comprar(cama)
    casaDePepeYJulian.comprar(plancha)
    assert.equals(29200, casaDePepeYJulian.importeTotal())
  }
  
  test "lista de las cosas compradas" {
    casaDePepeYJulian.comprar(heladera)
    casaDePepeYJulian.comprar(cama)
    casaDePepeYJulian.comprar(plancha)
    assert.equals([heladera, cama, plancha], casaDePepeYJulian.cosasCompradas())
  }
  
  test "tiene un electrodomestico" {
    casaDePepeYJulian.comprar(heladera)
    casaDePepeYJulian.comprar(cama)
    casaDePepeYJulian.comprar(plancha)
    assert.that(casaDePepeYJulian.tieneAlgun(electrodomestico))
  }
  
  test "tiene un mueble" {
    casaDePepeYJulian.comprar(heladera)
    casaDePepeYJulian.comprar(cama)
    casaDePepeYJulian.comprar(plancha)
    assert.that(casaDePepeYJulian.tieneAlgun(mueble))
  }
  
  test "no tiene comida" {
    casaDePepeYJulian.comprar(heladera)
    casaDePepeYJulian.comprar(cama)
    casaDePepeYJulian.comprar(plancha)
    assert.notThat(casaDePepeYJulian.tieneAlgun(comida))
  }
  
  test "Viene de comprar un electrodomestivco" {
    casaDePepeYJulian.comprar(heladera)
    casaDePepeYJulian.comprar(cama)
    casaDePepeYJulian.comprar(plancha)
    assert.that(casaDePepeYJulian.vieneDeComprar(electrodomestico))
  }
  
  test "No viene de comprar un mueble" {
    casaDePepeYJulian.comprar(heladera)
    casaDePepeYJulian.comprar(cama)
    casaDePepeYJulian.comprar(plancha)
    assert.notThat(casaDePepeYJulian.vieneDeComprar(mueble))
  }
  
  test "Es derrochona" {
    casaDePepeYJulian.comprar(heladera)
    casaDePepeYJulian.comprar(cama)
    casaDePepeYJulian.comprar(plancha)
    assert.that(casaDePepeYJulian.esDerrochona())
  }
  
  test "Los electrodomesticos son la heladera y la plancha" {
    casaDePepeYJulian.comprar(heladera)
    casaDePepeYJulian.comprar(cama)
    casaDePepeYJulian.comprar(plancha)
    assert.equals(
      [heladera, plancha],
      casaDePepeYJulian.comprados(electrodomestico)
    )
  }
  
  test "El unico mueble es la cama" {
    casaDePepeYJulian.comprar(heladera)
    casaDePepeYJulian.comprar(cama)
    casaDePepeYJulian.comprar(plancha)
    assert.equals([cama], casaDePepeYJulian.comprados(mueble))
  }
  
  test "No es una mala epoca" {
    casaDePepeYJulian.comprar(heladera)
    casaDePepeYJulian.comprar(cama)
    casaDePepeYJulian.comprar(plancha)
    assert.notThat(casaDePepeYJulian.malaEpoca())
  }
  
  test "Falta comprar una tira de asado y un paquete de fideos" {
    casaDePepeYJulian.comprar(heladera)
    casaDePepeYJulian.comprar(cama)
    casaDePepeYJulian.comprar(plancha)
    assert.equals(
      [tiraDeAsado, paqueteDeFideos],
      casaDePepeYJulian.queFaltaComprar([tiraDeAsado, paqueteDeFideos])
    )
  }
  
  test "Falta comida" {
    casaDePepeYJulian.comprar(heladera)
    casaDePepeYJulian.comprar(cama)
    casaDePepeYJulian.comprar(plancha)
    assert.that(casaDePepeYJulian.faltaComida())
  }
  
  test "Compramos electrodomesticos y muebles" {
    casaDePepeYJulian.comprar(heladera)
    casaDePepeYJulian.comprar(cama)
    casaDePepeYJulian.comprar(plancha)
    assert.equals(
      [electrodomestico, mueble],
      casaDePepeYJulian.categor√≠asCompradas()
    )
  }
}

describe "Cuentas bancarias" {
  test "Cuenta corriente" {
    cuentaCorriente.saldo(20)
    cuentaCorriente.depositar(1000)
    assert.equals(1020, cuentaCorriente.saldo())
    cuentaCorriente.extraer(50)
    assert.equals(970, cuentaCorriente.saldo())
    assert.throwsException({ cuentaCorriente.extraer(2000) })
  }
  
  test "Cuenta con gastos" {
    cuentaConGastos.depositar(1000)
    assert.equals(1480, cuentaConGastos.saldo())
    cuentaConGastos.extraer(30)
    assert.equals(1450, cuentaConGastos.saldo())
    assert.throwsException({ cuentaConGastos.depositar(2000) })
    assert.equals(1450, cuentaConGastos.saldo())
    cuentaConGastos.extraer(2000)
    assert.equals(-550, cuentaConGastos.saldo())
  }
  
  test "Compras con la cuenta elegida" {
    cuentaCorriente.saldo(1000)
    casaDePepeYJulian.comprar(tiraDeAsado)
    casaDePepeYJulian.comprar(paqueteDeFideos)
    assert.equals(600, casaDePepeYJulian.cuentaActual().saldo())
  }
}